/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
* Copyright 2008-2012 Pelican Mapping
* http://osgearth.org
*
* osgEarth is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesser General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>
*/
#ifndef OSGEARTHSIM_KDISLIVEENTITYPROVIDER_H
#define OSGEARTHSIM_KDISLIVEENTITYPROVIDER_H 1

#include <osgEarthSim/Common>

#include <osgEarthSim/EntityProvider>
#include <OpenThreads/Thread>

#include "KDIS/Network/Connection.h" // A cross platform connection class.
#include "KDIS/Extras/PDU_Factory.h"
#include "KDIS/PDU/Entity_Info_Interaction/Entity_State_PDU.h"



namespace osgEarth { namespace Sim {

    using namespace KDIS;
    using namespace DATA_TYPE;
    using namespace PDU;
    using namespace ENUMS;
    using namespace UTILS;
    using namespace NETWORK;


    /**
     * Provides entities from a live running DIS simulation
     */
    class OSGEARTHSIM_EXPORT KDISLiveEntityProvider  : public EntityProvider, public OpenThreads::Thread
    {       
    public:
        KDISLiveEntityProvider(const std::string &ip="192.168.1.255", int port=3000);
        virtual ~KDISLiveEntityProvider();

        virtual void startImplementation();
        virtual void stopImplementation();

        const std::string& getIP() const { return _ip; }
        int getPort() const { return _port;}

        virtual void run();      
        virtual int cancel();              

    private:

        std::string _ip;
        int _port;
        volatile bool _done;
    };

}}

#endif //OSGEARTHSIM_KDISLIVEENTITYPROVIDER_H