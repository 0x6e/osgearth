/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
 * Copyright 2008-2010 Pelican Mapping
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */
#ifndef OSGEARTHQT_TERRAINPROFILEGRAPH_H
#define OSGEARTHQT_TERRAINPROFILEGRAPH_H 1

#include <osgEarthQt/Actions>
#include <osgEarthQt/Common>
#include <osgEarthQt/DataManager>

#include <osgEarth/Map>
#include <osgEarthUtil/TerrainProfile>

//#include <QCheckBox>
//#include <QDropEvent>
//#include <QFrame>
#include <QGraphicsScene>
#include <QGraphicsView>
//#include <QHBoxLayout>
#include <QMouseEvent>
//#include <QPoint>
#include <QRect>
#include <QResizeEvent>
//#include <QScrollArea>
//#include <QSlider>
//#include <QVBoxLayout>
//#include <QWidget>

namespace osgEarth { namespace QtGui
{
    class GraphChangedCallback : public QObject, public osgEarth::Util::TerrainProfileCalculator::ChangedCallback
    {
    Q_OBJECT

    public:
      GraphChangedCallback(/*TerrainProfileGraph* graph*/)
        //: _graph(graph)
      {
      }

      void onChanged(const osgEarth::Util::TerrainProfileCalculator* sender)
      {
        //_graph->redrawGraph();
        emit graphChanged();
      }

    signals:
     void graphChanged();

    protected:
      //TerrainProfileGraph* _graph;
    };

    class OSGEARTHQT_EXPORT TerrainProfileGraph : public QGraphicsView
    {
    Q_OBJECT

    public:
      TerrainProfileGraph(osgEarth::Util::TerrainProfileCalculator* calculator);
      ~TerrainProfileGraph();

    protected:
      static const int FIELD_Z;
      static const int AXES_Z;
      static const int GRAPH_Z;
      static const int OVERLAY_Z;

      void resizeEvent(QResizeEvent* e);
      void mouseMoveEvent(QMouseEvent* e);

      void redrawGraph();
      void drawAxes(double yMin, double yMax, double yScale, double xMax, QRect &out_field);

    private slots:
      void onGraphChanged();

    private:
      osg::ref_ptr<osgEarth::Util::TerrainProfileCalculator> _calculator;
      osg::ref_ptr<GraphChangedCallback> _graphChangedCallback;
      QGraphicsScene* _scene;
      QGraphicsSimpleTextItem* _hoverTextItem;
      QPen _linePen;
      QPen _axesPen;
      QFont _graphFont;
      QColor _backgroundColor;
      QColor _fieldColor;
      QColor _axesColor;
      QColor _graphColor;
      QColor _graphFillColor;
      QRect _graphField;
      double _totalDistance;
      int _graphMinY;
      int _graphMaxY;
      int _graphWidth;
      int _graphHeight;
    };
} }

#endif // OSGEARTHQT_TERRAINPROFILEGRAPH_H