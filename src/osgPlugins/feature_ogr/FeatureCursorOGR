/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
 * Copyright 2008-2009 Pelican Ventures, Inc.
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */
#ifndef OSGEARTHFEATURES_FEATURE_CURSOR_OGR
#define OSGEARTHFEATURES_FEATURE_CURSOR_OGR 1

#include <osgEarthFeatures/Feature>
#include <osgEarthFeatures/FeatureSource>
#include <ogr_api.h>
#include <queue>

using namespace osgEarth;
using namespace osgEarthFeatures;

class FeatureCursorOGR : public FeatureCursor
{
public:
    FeatureCursorOGR(
        OGRLayerH layerHandle,
        const FeatureProfile* profile,
        const FeatureQuery& query );

public: // FeatureCursor

    bool hasMore() const;
    Feature* nextFeature();

protected:
    virtual ~FeatureCursorOGR();

private:
    OGRLayerH _layerHandle;
    FeatureQuery _query;
    int _chunkSize;
    OGRFeatureH _nextHandleToQueue;
    osg::ref_ptr<const FeatureProfile> _profile;
    std::queue< osg::ref_ptr<Feature> > _queue;
    osg::ref_ptr<Feature> _lastFeatureReturned;

private:
    void readChunk();
    Feature* createFeature( OGRFeatureH handle );
};


#endif // OSGEARTHFEATURES_FEATURE_CURSOR_OGR
