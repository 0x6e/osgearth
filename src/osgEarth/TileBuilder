#ifndef OSGEARTH_TILE_BUILDER_H
#define OSGEARTH_TILE_BUILDER_H 1

#include <osgEarth/Common>
#include <osgEarth/TileSource>
#include <osgEarth/MapConfig>
#include <osgDB/ReaderWriter>
#include <vector>

namespace osgEarth
{
    class OSGEARTH_EXPORT TileBuilder : public osg::Referenced
    {
    public:
        static TileBuilder* create(
            MapConfig* map,
            const std::string& url_template,
            const osgDB::ReaderWriter::Options* global_options =NULL );
        
        osg::Node* createNode( const TileKey* key );

        MapConfig* getMapConfig() const;

    protected:
        TileBuilder( 
            MapConfig* map, 
            const std::string& url_template,
            const osgDB::ReaderWriter::Options* global_options );

        std::string createURI( const TileKey* key );

        virtual void addChildren( osg::Group* parent, const TileKey* key ) =0;
        virtual osg::Node* createQuadrant( const TileKey* key ) =0;
        virtual std::string getProj4String() const =0;

    protected:
        osg::ref_ptr<MapConfig> map;
        std::string url_template;
        std::vector< osg::ref_ptr<TileSource> > image_sources;
        std::vector< osg::ref_ptr<TileSource> > heightfield_sources;
    };
};

#endif // OSGEARTH_TILE_BUILDER_H