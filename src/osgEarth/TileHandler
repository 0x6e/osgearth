/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
* Copyright 2008-2013 Pelican Mapping
* http://osgearth.org
*
* osgEarth is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesser General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>
*/
#ifndef OSGEARTH_TILEHANDLER_H
#define OSGEARTH_TILEHANDLER_H 1

#include <osgEarth/Common>
#include <osgEarth/TileKey>

#include <osgEarth/TerrainLayer>

namespace osgEarth
{
    /**
    * TileHandler is an interface for operations on a TileKey
    */
    class OSGEARTH_EXPORT TileHandler : public osg::Referenced
    {
    public:
        virtual bool handleTile( const TileKey& key );
    };


    /**
    * A TileHandler that caches tiles for the given layer.
    */
    class OSGEARTH_EXPORT CacheTileHandler : public TileHandler
    {
    public:
        CacheTileHandler( TerrainLayer* layer );
        virtual bool handleTile( const TileKey& key );

    protected:
        osg::ref_ptr< TerrainLayer > _layer;
    };


    /**
    * A TileHandler that writes out a tile from a layer in a TMS structure. packages a tile in a TMS structure
    */
    class WriteTMSTileHandler : public TileHandler
    {
    public:
        WriteTMSTileHandler(TerrainLayer* layer, const std::string& destination, const std::string& extension="jpg" );

        const std::string& getExtension() const;
        const std::string& getDestination() const;
        unsigned int getWidth() const;
        unsigned int getHeight() const;
        TerrainLayer* getLayer();

    protected:
        std::string getPathForTile( const TileKey &key );

        virtual bool handleTile( const TileKey& key );

    protected:
        std::string _extension;
        std::string _destination;
        osg::ref_ptr< TerrainLayer > _layer;
        unsigned int _width;
        unsigned int _height;
    };

} // namespace osgEarth

#endif // OSGEARTH_TRAVERSAL_DATA_H
