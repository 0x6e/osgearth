/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
* Copyright 2008-2009 Pelican Ventures, Inc.
* http://osgearth.org
*
* osgEarth is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesser General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>
*/
#ifndef OSGEARTH_FINDNODE_H
#define OSGEARTH_FINDNODE_H 1

#include <osg/NodeVisitor>

namespace osgEarth
{
    template<class T> struct FindTopMostNodeOfTypeVisitor : public osg::NodeVisitor
    {
        FindTopMostNodeOfTypeVisitor() : osg::NodeVisitor(osg::NodeVisitor::TRAVERSE_ALL_CHILDREN), _foundNode(0) {}
        void apply(osg::Node& node) {
            _foundNode = dynamic_cast<T*>( &node );
            if ( !_foundNode )
                traverse( node );
        }
        T* _foundNode;
    };

    template<class T> T* findTopMostNodeOfType( osg::Node* node ) {
        if (!node) return 0;
        FindTopMostNodeOfTypeVisitor<T> fnotv;
        node->accept( fnotv );
        return fnotv._foundNode;
    }
}

#endif //OSGEARTH_FINDNODE_H