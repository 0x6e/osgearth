#ifndef OSGEARTH_CACHE_SEED_H
#define OSGEARTH_CACHE_SEED_H 1

#include <osgEarth/Common>
#include <osgEarth/MapConfig>
#include <osgEarth/TileKey>
#include <osgEarth/TileBuilder>

namespace osgEarth
{
    struct Bounds
    {
        Bounds(double minx, double miny, double maxx, double maxy):
    _min(minx, miny),
        _max(maxx, maxy)
    {
    }

    bool intersects(TileKey* key)
    {
        double minlon, minlat, maxlon, maxlat;
        key->getGeoExtents(minlon, minlat, maxlon, maxlat);


        return  osg::maximum(_min.x(), minlon) <= osg::minimum(_max.x(),maxlon) &&
            osg::maximum(_min.y(), minlat) <= osg::minimum(_max.y(), maxlat);
    }

    osg::Vec2d _min;
    osg::Vec2d _max;
    };

    /**
    * Utility class for seeding a cache
    */
    class OSGEARTH_EXPORT CacheSeed : public osg::Referenced
    {
    public:
        CacheSeed():
          _maxLevel(5),
          _bounds(-180, -90, 180, 90)
          {
          }

          /**
          * Sets the maximum level to seed to
          */
          void setMaxLevel(const unsigned int &maxLevel) {_maxLevel = maxLevel;}
          /**
          *Gets the maximum level to cache to.
          */
          const unsigned int getMaxLevel() const {return _maxLevel;}

          /**
          * Gets the bounds to seed in
          */
          const Bounds& getBounds() const { return _bounds; }

          /*
          *Sets the bounds to seed in
          */
          void setBounds(const Bounds& bounds) { _bounds = bounds; }
          
          /*
          *Sets the bounds to seed in
          */
          void setBounds(const double &minLon, const double minLat, const double &maxLon, const double &maxLat) { _bounds = Bounds(minLon, minLat, maxLon, maxLat); }

          /*
          *Performs the seed operation
          */
          void seed(MapConfig *map);

    protected:
        unsigned int _maxLevel;

        Bounds _bounds;
        void processKey(TileBuilder* tile_builder, TileKey *key);
    };
}

#endif //OSGEARTH_CACHE_SEED_H