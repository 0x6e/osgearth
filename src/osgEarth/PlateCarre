#ifndef OSGEARTH_PLATE_CARRE_QUAD_KEY_H
#define OSGEARTH_PLATE_CARRE_QUAD_KEY_H 1

#include <osgEarth/Common>
#include <osgEarth/TileKey>
#include <osg/Referenced>
#include <osg/Image>
#include <osg/Shape>
#include <osgDB/ReaderWriter>
#include <string>

namespace osgEarth
{
    class OSGEARTH_EXPORT PlateCarreTileKey : public TileKey
    {
    public:
        static const std::string TYPE_CODE;

        PlateCarreTileKey( const PlateCarreTileKey& rhs );

        PlateCarreTileKey( const std::string& key_string );

        PlateCarreTileKey( const std::string& key_string, const TileGridProfile& profile );

    public: //overrides

        TileKey* getSubkey( unsigned int quadrant ) const;

        const std::string& str() const;

        unsigned int getLevelOfDetail() const;

        bool getGeoExtents(
            double& out_min_lon,
            double& out_min_lat,
            double& out_max_lon,
            double& out_max_lat ) const;

        osgTerrain::TileID getTileId() const;

        std::string getTypeCode() const { return TYPE_CODE; }

    private:
//        std::string qk;
//        TileGridProfile profile;
        osg::ref_ptr<PlateCarreTileKey> subkeys[4];
    };

    
    //class OSGEARTH_EXPORT PlateCarreTileSource : public osg::Referenced
    //{
    //public:
    //    virtual osg::Image* createImage( const PlateCarreTileKey* key ) =0;

    //    virtual osg::HeightField* createHeightField( const PlateCarreTileKey* key ) =0;
    //};


    //class OSGEARTH_EXPORT ReaderWriterPlateCarreTileSource : public PlateCarreTileSource
    //{
    //public:
    //    ReaderWriterPlateCarreTileSource(
    //        const std::string&                  extension,
    //        const osgDB::ReaderWriter::Options* options =NULL );
    //    
    //public:
    //    osg::Image* createImage( const PlateCarreTileKey* key );

    //    osg::HeightField* createHeightField( const PlateCarreTileKey* key );

    //private:
    //    std::string extension;
    //    osg::ref_ptr<const osgDB::ReaderWriter::Options> options;
    //};
}

#endif // OSGEARTH_PLATE_CARRE_QUAD_KEY_H