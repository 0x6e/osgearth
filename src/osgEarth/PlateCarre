#ifndef OSGEARTH_PLATE_CARRE_QUAD_KEY_H
#define OSGEARTH_PLATE_CARRE_QUAD_KEY_H 1

#include <osgEarth/Common>
#include <osgEarth/TileKey>
#include <osg/Referenced>
#include <osg/Image>
#include <osg/Shape>
#include <osgDB/ReaderWriter>
#include <string>

namespace osgEarth
{
    class OSGEARTH_EXPORT PlateCarreTileKey : public TileKey
    {
    public:
        static const std::string TYPE_CODE;

        PlateCarreTileKey( const PlateCarreTileKey& rhs );

        PlateCarreTileKey( const std::string& key_string );

        PlateCarreTileKey( const std::string& key_string, const TileGridProfile& profile );

    public: //overrides

        TileKey* getSubkey( unsigned int quadrant ) const;

        const std::string& str() const;

        unsigned int getLevelOfDetail() const;

        bool getGeoExtents(
            double& out_min_lon,
            double& out_min_lat,
            double& out_max_lon,
            double& out_max_lat ) const;

        void getPixelExtents(
            unsigned int& xmin,
            unsigned int& ymin,
            unsigned int& xmax,
            unsigned int& ymax) const;

        virtual void getTileXY(
            unsigned int& out_tile_x,
            unsigned int& out_tile_y) const;

        osgTerrain::TileID getTileId() const;

        std::string getTypeCode() const { return TYPE_CODE; }

    private:
        osg::ref_ptr<PlateCarreTileKey> subkeys[4];
    };
}

#endif // OSGEARTH_PLATE_CARRE_QUAD_KEY_H