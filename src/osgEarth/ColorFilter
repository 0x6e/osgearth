/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
 * Copyright 2008-2012 Pelican Mapping
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */
#ifndef OSGEARTH_COLOR_FILTER_H
#define OSGEARTH_COLOR_FILTER_H 1

#include <osgEarth/Common>
#include <osg/Shader>
#include <vector>

namespace osgEarth
{
    /** 
     * An ColorFilter is an inline shader-based image processing function.
     * You can install a chain of ColorFilters on an ImageLayer and the shaders
     * will post-process the layer's color (after texturing but before lighting)
     * using custom shader code.
     */
    class /*header-only*/ ColorFilter : public osg::Referenced
    {
    protected:
        ColorFilter() { }

    public:
        /**
         * The name of the function to call in the custom shader. This function
         * must have the signature:
         *
         *    void function(in int slot, inout vec4 color)
         *
         * Failure to match this signature will result in a shader compilation error.
         *
         * @param uid Unique ID of the object to which this filter is attached.
         */
        virtual std::string getEntryPointFunctionName() const =0;

        /**
         * Installs any uniforms or other bindings required by this filter on the
         * provided state set.
         */
        virtual void install( osg::StateSet* stateSet ) const =0;
    };

    /**
     * A "Chain" of image filters. They are executed in order.
     */
    typedef std::vector< osg::ref_ptr<ColorFilter> > ColorFilterChain;

} // namespace osgEarth

#endif // OSGEARTH_IMAGE_FILTER_H
