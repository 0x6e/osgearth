/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
* Copyright 2008-2014 Pelican Mapping
* http://osgearth.org
*
* osgEarth is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesser General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>
*/
#ifndef OSGEARTH_CLAMPING_H
#define OSGEARTH_CLAMPING_H

#include <osgEarth/Common>
#include <osg/Node>
#include <osg/Geometry>

namespace osgEarth
{
    class OSGEARTH_EXPORT Clamping
    {
    public:
        // GLSL attribute binding location for clamping vertex attributes
        static const int AnchorAttrLocation;

        // Name of the clamping anchor vertex attribute
        static const char* AnchorAttrName;

        // Name of the boolean uniform that tells the shader whether the
        // geometry has clamping attributes.
        static const char* HasAttrsUniformName;

        // Name of the uniform used to apply an altitude offset to clamped geometry
        static const char* AltitudeOffsetUniformName;

        // When setting clamping vertex attributes, use these constants in
        // the alpha channel to indicate whether the vertex is to be clamped
        // to the reference vertex in the attribute data, or to the ground.
        static const float ClampToAnchor;
        static const float ClampToGround;

        static void applyDefaultClampingAttrs(
            osg::Node* node,
            float      verticalOffset =0.0f);

        static void applyDefaultClampingAttrs(
            osg::Geometry* geom,
            float          verticalOffset =0.0f);

        static void installHasAttrsUniform(
            osg::StateSet* stateset );
    };
}

#endif // OSGEARTH_CLAMPING_H
