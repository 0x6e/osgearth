/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
* Copyright 2008-2010 Pelican Mapping
* http://osgearth.org
*
* osgEarth is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesser General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>
*/
#ifndef OSGEARTHUTIL_TERRAINPROFILE
#define OSGEARTHUTIL_TERRAINPROFILE

#include <osgEarthUtil/Common>
#include <osgEarth/MapNode>

namespace osgEarth { namespace Util {

    class OSGEARTHUTIL_EXPORT TerrainProfile
    {
    public:
        TerrainProfile();

        TerrainProfile(const TerrainProfile& profile);

        double getDistance( int i ) const;
        double getTotalDistance() const;

        void getElevationRanges(double &min, double &max );

        double getElevation( int i ) const;
        unsigned int getNumElevations() const;

        void setSpacing( double spacing );
        double getSpacing() const;

        void addElevation( double elevation );

        void clear();

    private:
        double _spacing;
        typedef std::vector< double > ElevationList;
        ElevationList _elevations;
    };


    class OSGEARTHUTIL_EXPORT TerrainProfileCalculator : public TerrainCallback
    {
    public:

        struct ChangedCallback : public osg::Referenced
        {
        public:
            virtual void onChanged(const TerrainProfileCalculator* sender) {};
        };

        typedef std::list< osg::ref_ptr<ChangedCallback> > ChangedCallbackList;


        TerrainProfileCalculator(osgEarth::MapNode* mapNode, const osgEarth::GeoPoint& start, const osgEarth::GeoPoint& end);
    
        void addChangedCallback( ChangedCallback* callback );

        void removeChangedCallback( ChangedCallback* callback );

        const TerrainProfile& getProfile() const;

        unsigned int getNumSamples() const;

        void setNumSamples( unsigned int numSamples);

        const GeoPoint& getStart() const;

        const GeoPoint& getEnd() const;

        void setStartEnd(const osgEarth::GeoPoint& start, const osgEarth::GeoPoint& end);

        virtual void onTileAdded(const osgEarth::TileKey& tileKey, osg::Node* terrain, TerrainCallbackContext&);

        void recompute();

        static void computeTerrainProfile( osgEarth::MapNode* mapNode, const osgEarth::GeoPoint& start, const osgEarth::GeoPoint& end, unsigned int numSamples, TerrainProfile& profile);

        protected:
            ~TerrainProfileCalculator();


    private:
        osgEarth::GeoPoint _start;
        osgEarth::GeoPoint _end;
        unsigned int _numSamples;
        TerrainProfile _profile;
        osg::ref_ptr< osgEarth::MapNode > _mapNode;
        ChangedCallbackList _changedCallbacks;
    };

} } // namespace osgEarth::Util

#endif // OSGEARTHUTIL_TERRAINPROFILE
