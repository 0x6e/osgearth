/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
 * Copyright 2008-2010 Pelican Mapping
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

#ifndef OSGEARTHUTIL_FEATURE_DRAGGER_TOOL_H
#define OSGEARTHUTIL_FEATURE_DRAGGER_TOOL_H 1

#include <osgEarthUtil/Common>
#include <osgEarthUtil/FeatureQueryTool>
#include <osgEarth/MapNode>
#include <osgEarth/Draggers>
#include <osgGA/GUIEventHandler>
#include <osg/View>

namespace osgEarth { namespace Util
{
    using namespace osgEarth;

    /**
     * Tool that let you select a feature and drag it around.
     */
    class OSGEARTHUTIL_EXPORT FeatureDraggerTool : public osgGA::GUIEventHandler, 
                                                   public FeatureQueryTool::Callback
    {
    public:
        /**
         * Constructs a new feature dragger tool.
         */
        FeatureDraggerTool(
            MapNode*          mapNode,
            FeatureQueryTool* queryTool );


    public: // GUIEventHandler

        virtual bool handle( const osgGA::GUIEventAdapter& ea, osgGA::GUIActionAdapter& aa );


    public: // FeatureQueryTool::Callback

        virtual void onHit( FeatureSourceIndexNode* index, FeatureID fid, const EventArgs& args );

        virtual void onMiss( const EventArgs& args );


    protected:
        MapNode*                _mapNode;
        osg::ref_ptr<osg::Node> _target;
        osg::ref_ptr<Dragger>   _dragger;
    };

} } // namespace osgEarthUtil

#endif // OSGEARTHUTIL_FEATURE_DRAGGER_TOOL_H
