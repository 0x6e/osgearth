/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
* Copyright 2008-2013 Pelican Mapping
* http://osgearth.org
*
* osgEarth is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesser General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>
*/
#ifndef OSGEARTHUTIL_OCEAN
#define OSGEARTHUTIL_OCEAN

#include <osgEarthUtil/Common>
#include <osgEarth/DateTime>
#include <osgEarth/Config>
#include <osg/Group>
#include <osg/View>
#include <osgDB/ReaderWriter>

namespace osgEarth {
    class Map;
}
namespace osgDB {
    class Options;
}

namespace osgEarth { namespace Util 
{
    using namespace osgEarth;

    /**
     * Base Options structure for loading an Ocean node from a plugin.
     */
    class OSGEARTHUTIL_EXPORT OceanOptions : public DriverConfigOptions
    {
    public:
        OceanOptions( const ConfigOptions& options =ConfigOptions() );
        virtual ~OceanOptions() { }
        virtual Config getConfig() const;

    protected:
        virtual void mergeConfig( const Config& conf );
        
    private:
        void fromConfig( const Config& conf );
    };


    /**
    * Interface for a Node that renders an ocean surface.
    */
    class OSGEARTHUTIL_EXPORT OceanNode : public osg::Group
    {
    protected:
        // CTOR (abstract base class)
        OceanNode();

        // protected DTOR (heap-only)
        virtual ~OceanNode();

    public:

    protected:

    private:
    };


    /**
     * Base class for an ocean driver plugin implementation.
     */
    class OSGEARTHUTIL_EXPORT OceanDriver : public osgDB::ReaderWriter
    {
    protected:
        const Map* getMap(const osgDB::Options* opt) const;
        const OceanOptions& getOceanOptions(const osgDB::Options* opt) const;
    };


    /**
     * Factory for creating an OceanNode from a plugin driver.
     */
    class OSGEARTHUTIL_EXPORT OceanFactory
    {
    public:
        static OceanNode* create(
            const OceanOptions&  options,
            const osgEarth::Map* map );
    };

} } // namespace osgEarth::Util

#endif //OSGEARTHUTIL_OCEAN
