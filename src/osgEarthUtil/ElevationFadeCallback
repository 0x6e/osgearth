/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
* Copyright 2008-2010 Pelican Mapping
* http://osgearth.org
*
* osgEarth is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesser General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>
*/

#ifndef OSGEARTHUTIL_ELEVATIONFADECALLBACK
#define OSGEARTHUTIL_ELEVATIONFADECALLBACK

#include <osg/NodeCallback>
#include <osg/CoordinateSystemNode>


#include <osgEarth/FindNode>
#include <osgEarth/MapNode>

#include <osgEarthUtil/Common>

namespace osgEarthUtil
{
    /**
     * A callback that sets layers' opacity based of the elevation of the camera.
     * Helpful for fading layers in and out as your altitude changes.
     */
	class OSGEARTHUTIL_EXPORT ElevationFadeCallback : public osg::NodeCallback
	{
	public:
		/**
		*Creates a new ElevationFadeCallback
		*/
		ElevationFadeCallback();

		virtual void operator()(osg::Node* node, osg::NodeVisitor* nv);

        /**
         * Sets the fade elevation range for a layer
         */
        void setElevationRange(
            osgEarth::ImageLayer* layer, 
            float maxElevation, 
            float minElevation,
            float maxBuffer = -1.0f,
            float minBuffer = 0.0f );

	private:
     	osg::observer_ptr<osg::CoordinateSystemNode> _csn;
		double _currentElevation;

        struct ElevationRange {
            float min, max, minBuffer, maxBuffer;
        };
        typedef std::map< osg::observer_ptr<osgEarth::ImageLayer>, ElevationRange> LayerElevationRanges;
        LayerElevationRanges _ranges;

		bool _firstFrame;
		double _previousTime;
		double _animationTime;
	};
}

#endif //OSGEARTHUTIL_ELEVATIONFADECALLBACK
