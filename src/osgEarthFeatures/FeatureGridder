/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
 * Copyright 2008-2009 Pelican Ventures, Inc.
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

#ifndef OSGEARTHFEATURES_FEATURE_GRIDDER_H
#define OSGEARTHFEATURES_FEATURE_GRIDDER_H 1

#include <osgEarthFeatures/Common>
#include <osgEarthFeatures/Feature>
#include <osgEarth/GeoData>

using namespace osgEarth;

namespace osgEarth { namespace Features
{
    /**
     * Given a list of features, this will grid them up and return one
     * grid cell at a time. For each grid cell, it will crop the feature
     * geometry to the cell boundary.
     */
    class OSGEARTHFEATURES_EXPORT FeatureGridder : public osg::Referenced
    {
    public:
        static bool isSupported();

    public:
        FeatureGridder( const FeatureList& features, const GeoExtent& extent, double width, double height );

        int getNumCells() const;

        bool getCell( int i, FeatureList& output ) const;

    public:
        virtual ~FeatureGridder();

    protected:
        const FeatureList& _input;
        GeoExtent _inputExtent;
        double _cellWidth, _cellHeight;
        int _cellsX, _cellsY;
        std::list<void*> _geosGeoms;
    };

} } // namespace osgEarth::Features

#endif //OSGEARTHFEATURES_FEATURE_GRIDDER_H
