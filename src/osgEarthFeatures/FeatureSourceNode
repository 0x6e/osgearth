/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
 * Copyright 2008-2010 Pelican Mapping
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

#ifndef OSGEARTHFEATURES_FEATURE_SOURCE_NODE_H
#define OSGEARTHFEATURES_FEATURE_SOURCE_NODE_H 1

#include <osgEarthFeatures/Common>
#include <osgEarthFeatures/Feature>
#include <osgEarthFeatures/FeatureSource>
#include <osg/Drawable>
#include <osg/MatrixTransform>

namespace osgEarth { namespace Features
{
    /**
     * Transform that holds a reference to a FeatureSource that
     * (presumably) represents materialized features in the scene graph below.
     */
    class OSGEARTHFEATURES_EXPORT FeatureSourceNode : public osg::MatrixTransform
    {
    public:
        /**
         * Constructs a new feature source node.
         */
        FeatureSourceNode( FeatureSource* featureSource, FeatureID fid );

        /**
         * Gets the feature source stored in this node
         */
        FeatureSource* getFeatureSource() const { return _featureSource.get(); }

        /**
         * Gets the feature ID associated with this node
         */
        FeatureID getFID() const { return _fid; }

        //        virtual const char* className() const { return "FeatureSourceNode"; }
        //        virtual const char* libraryName() const { return "osgEarthFeatures"; }

    private:
        osg::ref_ptr<FeatureSource> _featureSource;
        FeatureID                   _fid;
    };


} } // namespace osgEarth::Features

#endif // OSGEARTHFEATURES_FEATURE_SOURCE_NODE_H
