/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
 * Copyright 2008-2009 Pelican Ventures, Inc.
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

#ifndef OSGEARTHSYMBOLOGY_POPUP_H
#define OSGEARTHSYMBOLOGY_POPUP_H 1

#include <osgWidget/Frame>
#include <osgWidget/Window>
#include <osgWidget/Label>

namespace osgEarth { namespace Symbology
{

    class WidgetMessageBox
    {
    public:
        
        osgWidget::Frame* getButton();
        osgWidget::Frame* getWindow();

        bool create(osg::Image* themeMessage, 
                    const std::string& titleText,
                    const std::string& messageText,
                    const std::string& buttonText,
                    osgText::Font* font,
                    int fontSize);

        //static WidgetMessageBox popUp(const std::string& title, const std::string& text, const std::string exit = "" );
        static WidgetMessageBox popUp(osg::Image* themeMessage, const std::string& title, const std::string& text, const std::string exit ,osgText::Font* font, int fontSize );

    protected:

        osgWidget::Label* createLabel(const std::string& string, osgText::Font* font, int size, const osgWidget::Color& color,const osgWidget::Color& widgetColor = osgWidget::Color(0,0,0,0));
        
        osg::ref_ptr<osgWidget::Frame> _window;
        osg::ref_ptr<osgWidget::Frame> _button;

    };


}}

#endif
