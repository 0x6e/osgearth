/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
 * Copyright 2008-2009 Pelican Ventures, Inc.
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */
#ifndef OSGEARTHSYMBOLOGY_STYLE_H
#define OSGEARTHSYMBOLOGY_STYLE_H 1

#include <osgEarthSymbology/Common>
#include <osgEarthSymbology/Symbol>
#include <osg/Object>
#include <vector>

namespace osgEarth { namespace Symbology 
{
    /**
     * A Style is a named collection of Symbols.
     */
    class OSGEARTHSYMBOLOGY_EXPORT Style : public osg::Object
    {
    public:
        Style();
        Style(const Style&, const osg::CopyOp&);
        META_Object(osgEarthSymbology, Style);

        PointSymbol* getPoint() { return _point.get(); }
        const PointSymbol* getPoint() const { return _point.get(); }
        void setPoint(PointSymbol* symbol) { _point = symbol; }

        LineSymbol* getLine() { return _line.get(); }
        const LineSymbol* getLine() const { return _line.get(); }
        void setLine(LineSymbol* symbol) { _line = symbol; }

        /** Style information for polygon elements. */
        PolygonSymbol* getPolygon() { return _polygon.get(); }
        const PolygonSymbol* getPolygon() const { return _polygon.get(); }
        void setPolygon(PolygonSymbol* symbol) { _polygon = symbol; }

        /** Style information for text elements. */
        TextSymbol* getText() { return _text.get(); }
        const TextSymbol* getText() const { return _text.get(); }
        void setText(TextSymbol* symbol) { _text = symbol; }

        int getRevision() const { return _revision; }
        void setRevision(int rev) { _revision = rev; }
        void dirty() { _revision++; }

    protected:
        osg::ref_ptr<PolygonSymbol> _polygon;
        osg::ref_ptr<TextSymbol>    _text;
        osg::ref_ptr<PointSymbol>   _point;
        osg::ref_ptr<LineSymbol>    _line;
        int                         _revision;
    };

} } // namespace osgEarth::Symbology


#endif // OSGEARTHSYMBOLOGY_STYLE_H

