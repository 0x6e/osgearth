/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
* Copyright 2008-2014 Pelican Mapping
* http://osgearth.org
*
* osgEarth is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesser General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>
*/
#ifndef OSGEARTH_DRIVERS_REX_TERRAIN_PROXY_GEOMETRY
#define OSGEARTH_DRIVERS_REX_TERRAIN_PROXY_GEOMETRY 1

#include "Common"

#include <osg/Geometry>
#include <osg/Matrix>

#include <osgEarth/TileKey>

namespace osgEarth
{
    class MapInfo;
}

namespace osgEarth { namespace Drivers { namespace RexTerrainEngine
{
    class ProxyGeometry : public osg::Geometry
    {
    public:
        ProxyGeometry(const TileKey& key, const MapInfo& mapInfo, unsigned tileSize, bool gpuTessellation);

        void setElevationData(osg::Texture* elevationTexture, osg::Matrixf& scaleBiasMatrix);

        void accept(osg::PrimitiveFunctor& f) const ;
        void accept(osg::PrimitiveIndexFunctor& f) const;
    private:

        void constructXReferenceFrame(void);
        void constructEmptyGeometry(void);

        void rebuildIfNecessary() const;
        void rebuild(void);
        void clear(void);
        
        void makeVertsAndNormals(void);
        void tesselate(void);
        
        bool isDirty(void) const { return _dirty; }
        void setDirty(bool dirty){ _dirty=dirty; }

        unsigned getNumberOfVerts(void) const;
        unsigned getNumberOfIndices(void) const;

    private:
        const TileKey _key;
        osg::ref_ptr<GeoLocator> _locator;

        bool _dirty;

        osg::Texture* _elevationTexture;
        osg::Matrixf  _scaleBiasMatrix;
        unsigned      _tileSize;
        GLenum        _mode;
        osg::Matrix   _world2local;
        osg::Matrix   _local2world;

        static const bool _immediateBuild;
    };

} } } // namespace osgEarth::Drivers::RexTerrainEngine
#endif